name: Build and publish

on:
  workflow_dispatch:

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get latest release version
      id: latest_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        latest_release=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/releases/latest | \
          grep '"tag_name":' | \
          sed -E 's/.*"([^"]+)".*/\1/')
        echo "::set-output name=release::$latest_release"
    - name: Get package.json version  
      id: package_version
      uses: martinbeentjes/npm-get-version-action@v1.3.1
    - name: Update package.json version
      if: ${{ steps.latest_release.outputs.release != steps.package_version.outputs.current-version }}
      run: |
        npm version ${{ steps.latest_release.outputs.release }} --no-git-tag-version
        git add package.json
        git commit -m "Bump version to ${{ steps.latest_release.outputs.release }}"
        git push
  validate:
    name: Build and publish code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
      - name: Run Git Fetch
        id: git_fetch_run
        run: |
          git fetch --prune
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Set Git user
        run: |
          git config --global user.name "kokofixcomputers-bot"
          git config --global user.email "kokobot@kokofixcomputers.serv00.net"
      - name: Check types and Build
        run: yarn tsc --noEmit && NODE_ENV=PRODUCTION yarn run build
      - name: Pack Chrome Extension
        run: yarn run extension:pack
      - name: Upload Userscript And Extension
        uses: actions/upload-artifact@v3
        with:
          name: Userscript and Unpacked Extension
          path: |
            dist/eureka-loader.user.js
            dist/unpacked-extension.zip
      - name: Get Version from package.json
        id: package_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Copy eureka-loader.user.js to repo
        run: |
          cp dist/eureka-loader.user.js .
          git add eureka-loader.user.js
          git commit -m "Update eureka-loader.user.js"
          git push
      - name: Comment on Commit
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.KOKOBOT_TOKEN }}
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: 'Build Succeeded!'
            })
      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.KOKOBOT_TOKEN }}"
          automatic_release_tag: "${{ steps.package_version.outputs.version }}"
          prerelease: false
          title: "Release ${{ steps.package_version.outputs.version }}"
          files: |
            eureka-loader.user.js
            dist/unpacked-extension.zip
